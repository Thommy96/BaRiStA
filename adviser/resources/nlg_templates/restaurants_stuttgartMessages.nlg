# ---------------GENERAL TEMPLATES-------------------------
template welcomemsg(): "Welcome to the Restaurants in Stuttgart chat bot. Are you looking for a restaurant? Or do you want to add reviews & rating? We can also provide the information on distance and duration."
template welcomemsg(help): "Sorry, I cannot understand you. Please tell me again what you are looking for."
template welcomemsg(more) : "Can I help you with anything else?"
template bad() : "Sorry I am a bit confused; please tell me again what you are looking for."
template repeat() : "Could you please repeat that?"
template closingmsg() : "Thank you, goodbye."
template guide_user() : "Hi! Are you looking for a restaurant? or do you need help with the distance? :-)"
template badaddress() : "Sorry, there seems to be some typos in the start location you entered. please enter again."
template badtravelmanner(): "Sorry, there seems to be some typos in the traveling manner you entered. please type 'by foot', 'by bike', or 'by car'."
template whatdoyouwant() : "Ok, please tell me again what do you want."

#--------------System Requests---------------#
# system requestables are: category, price, rating, num_reviews, parking_lot

template request(category): "What kind of restaurant or bar are you looking for?"
template request(price): "What do you want their price range to be?"
template request(rating): "What do you want their rating to be?"
template request(name): "Please first tell me the name of the restaurant/bar."
template request(num_reviews): "How many reviews do you want it to have?"
template request(parking_lot): "Should it have a parking lot?"

template ask_writereview(name): "Alright, please enter your review for {name} now."
template inform_openingday(name, opening_day, opening_info): "{name} {opening_info} on {opening_day}"
template inform_manner(name, manner_info): "{manner_info} {name}"

template ask_startpoint() : "Please enter your start location. You can choose one of the pre-defined option 'Uni' 'Hauptbahnhof' or 'Schwabstraße'. Alternatively you can enter an address in the format <street name> <house number>, <post code> <city>."
template ask_distancemanner() : "Please tell me how are you going to get there? by foot, by bike, or by car?"

# --------- Helper Functions -------- #

function genitive(name)
	"{genitive_s(name)}"

function givename(name)
	"{name}"

#----------System Recommendation/Inform---------------#
# name, rating, category, opening_hours, phone_number, website, address, price, num_reviews, manner, description, reviews, parking_lot

function info(slot, value, name)
    if slot = "rating": "{givename(name)} has a rating of {value}"
    if slot = "category": "{givename(name)} is a {value}"
    if slot = "opening_hours": "{genitive(name)} opening hours are {value}"
    if slot = "phone_number": "{genitive(name)} phone number is {value}"
    if slot = "website": "{genitive(name)} website is {value}"
    if slot = "address": "{genitive(name)} address is {value}"
    if slot = "price": "{givename(name)} has a {value} price"
	if slot = "num_reviews": "{givename(name)} has {value} reviews"
	if slot = "manner": "{genitive(name)} possible options are {value}"
	if slot = "description": "{genitive(name)} short description is {value}"
	if slot = "reviews": "{givename(name)} has some examples reviews : {value}"
	if slot = "parking_lot": "{givename(name)} has {value} parking lot"

template inform(name)
    "There is a restaurant/bar named {name}. What do you want to know about it?"

    if name = "none": "I’m sorry, I could not find the restaurant/bar you specified."

template inform(name, *slots)
	"{for_entry(slots, "info", ", ", " and ", name)}."

    special_case name = "none"
		"There is no such restaurant/bar {for_entry(slots, "info", ", ", " and ", "which")}."

template inform_byname(name)
	"There is a restaurant/bar named {name}. What do you want to know about it?"

	if name = "none": "I’m sorry, I could not find the restaurant/bar you specified."

template inform_byname(name, *slots)
	"{for_entry(slots, "info", ", ", " and ", name)}."
	
	special_case name = "none"
		"There is no such restaurant/bar {for_entry(slots, "info", ", ", " and ", "which")}."

template inform_alternatives(name)
	"There is another restaurant/bar {name}. What do you want to know about it?"

	special_case name = "none"
		"I'm sorry, I couldn't find another restaurant/bar."

template inform_alternatives(name, *slots)
	"The restaurant/bar {name} also {for_entry(slots, "info", ", it ", " and ", name)}."
	
	special_case name = "none"
		"There is no other restaurant/bar which {for_entry(slots, "info", ", ", " and which ", "which")}."

template inform_distance(name, distance, duration, distance_manner)
	"The distance between your location and {name} is {distance}. And {distance_manner} you would need approximately {duration} to get there."

#------------System Confirm--------------#

template confirm(): "Please tell me more about the restaurant/bar you are looking for."

template confirm(name, *slots)
	if name = "none"
		"Let me confirm, you are looking for a restaurant/bar {for_entry(slots, "info", ", ", " and ", "which")}, right?"

template confirm_giverating(name, ratings_givable)
	"Let me confirm: you have given the restaurant/bar {name} a rating of {ratings_givable}."

template confirm_writereview(name, review)
	"Let me confirm: you have written the following review for {name}: {review}"

# ------------System RequestMore--------#

template reqmore(): "Can I help you with anything else?"

template select(*slot)
	"Sorry, are you looking for a restaurant/bar {for_entry(slot, "info_or_dontcare_list", "", "")}?"

function info_or_dontcare_list(slot, value_list)
	"{for(value_list, "info_or_dontcare", ", ", " or ", slot)}"
